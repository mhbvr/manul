apiVersion: v1
kind: ServiceAccount
metadata:
  name: envoy-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: envoy-control-plane
rules:
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: envoy-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: envoy-control-plane
subjects:
- kind: ServiceAccount
  name: envoy-control-plane
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-control-plane
  labels:
    app: envoy-control-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy-control-plane
  template:
    metadata:
      labels:
        app: envoy-control-plane
    spec:
      serviceAccountName: envoy-control-plane
      containers:
      - name: eds-server
        image: ko://github.com/mhbvr/manul/envoy-control-plane
        imagePullPolicy: IfNotPresent
        args:
        - "-service=manul"
        - "-namespace=default"
        - "-cluster=manul_cluster"
        - "-node-id=envoy-node"
        - "-port=18000"
        ports:
        - containerPort: 18000
          name: grpc
          protocol: TCP
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          tcpSocket:
            port: 18000
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 18000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: envoy-control-plane
  labels:
    app: envoy-control-plane
spec:
  selector:
    app: envoy-control-plane
  ports:
  - name: grpc
    port: 18000
    targetPort: 18000
    protocol: TCP
  type: ClusterIP